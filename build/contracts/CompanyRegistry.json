{
  "contractName": "CompanyRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "companies",
      "outputs": [
        {
          "name": "ethAddress",
          "type": "address"
        },
        {
          "name": "ipfsURI",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "ethAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ipfsURI",
          "type": "string"
        }
      ],
      "name": "CompanyRegistered",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ipfsURI",
          "type": "string"
        },
        {
          "name": "isregistered",
          "type": "bool"
        }
      ],
      "name": "registerCompany",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ethAddress",
          "type": "address"
        }
      ],
      "name": "getCompany",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"companies\",\"outputs\":[{\"name\":\"ethAddress\",\"type\":\"address\"},{\"name\":\"ipfsURI\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethAddress\",\"type\":\"address\"}],\"name\":\"getCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsURI\",\"type\":\"string\"},{\"name\":\"isregistered\",\"type\":\"bool\"}],\"name\":\"registerCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ethAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ipfsURI\",\"type\":\"string\"}],\"name\":\"CompanyRegistered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/indentify.sol\":\"CompanyRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/indentify.sol\":{\"keccak256\":\"0xfd34bb048daa9ee27251750bcc7e5aa8b2c6e465b8ff9832c5815a80140b96ed\",\"urls\":[\"bzzr://3e96932e27a9520bfb442fa750dbb71b23c404cda1443cad6660dda276e28901\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061077e806100206000396000f3fe608060405260043610610051576000357c010000000000000000000000000000000000000000000000000000000090048063355e6ce81461005657806362bc56e6146101535780637ccd28161461021d575b600080fd5b34801561006257600080fd5b506100a56004803603602081101561007957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f1565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101175780820151818401526020810190506100fc565b50505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561015f57600080fd5b506101a26004803603602081101561017657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e25780820151818401526020810190506101c7565b50505050905090810190601f16801561020f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022957600080fd5b506102ef6004803603604081101561024057600080fd5b810190808035906020019064010000000081111561025d57600080fd5b82018360208201111561026f57600080fd5b8035906020019184600183028401116401000000008311171561029157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035151590602001909291905050506104b0565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b5050505050905082565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b50505050509050919050565b80151515610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f6d70616e7920616c7265616479207265676973746572656400000000000081525060200191505060405180910390fd5b60408051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906105f29291906106ad565b509050503373ffffffffffffffffffffffffffffffffffffffff167f76686aa361308f4a08557cca1a847299ce61e5602a3495cd359a599a1dca438c836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066f578082015181840152602081019050610654565b50505050905090810190601f16801561069c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106ee57805160ff191683800117855561071c565b8280016001018555821561071c579182015b8281111561071b578251825591602001919060010190610700565b5b509050610729919061072d565b5090565b61074f91905b8082111561074b576000816000905550600101610733565b5090565b9056fea165627a7a7230582076c0094c94b1c62e80d74e6be159306ae050e774b86dc274eb7bd4785223f9ff0029",
  "deployedBytecode": "0x608060405260043610610051576000357c010000000000000000000000000000000000000000000000000000000090048063355e6ce81461005657806362bc56e6146101535780637ccd28161461021d575b600080fd5b34801561006257600080fd5b506100a56004803603602081101561007957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f1565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101175780820151818401526020810190506100fc565b50505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561015f57600080fd5b506101a26004803603602081101561017657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e25780820151818401526020810190506101c7565b50505050905090810190601f16801561020f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022957600080fd5b506102ef6004803603604081101561024057600080fd5b810190808035906020019064010000000081111561025d57600080fd5b82018360208201111561026f57600080fd5b8035906020019184600183028401116401000000008311171561029157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035151590602001909291905050506104b0565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b5050505050905082565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b50505050509050919050565b80151515610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f6d70616e7920616c7265616479207265676973746572656400000000000081525060200191505060405180910390fd5b60408051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906105f29291906106ad565b509050503373ffffffffffffffffffffffffffffffffffffffff167f76686aa361308f4a08557cca1a847299ce61e5602a3495cd359a599a1dca438c836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066f578082015181840152602081019050610654565b50505050905090810190601f16801561069c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106ee57805160ff191683800117855561071c565b8280016001018555821561071c579182015b8281111561071b578251825591602001919060010190610700565b5b509050610729919061072d565b5090565b61074f91905b8082111561074b576000816000905550600101610733565b5090565b9056fea165627a7a7230582076c0094c94b1c62e80d74e6be159306ae050e774b86dc274eb7bd4785223f9ff0029",
  "sourceMap": "66:706:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66:706:0;;;;;;;",
  "deployedSourceMap": "66:706:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:44:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;177:44:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;177:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:134:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;636:134:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;636:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:328;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:328:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;302:328:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;302:328:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;302:328:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;302:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;302:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;177:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;636:134::-;699:13;732:9;:22;742:11;732:22;;;;;;;;;;;;;;;:30;;724:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:134;;;:::o;302:328::-;396:12;395:13;387:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:86;;;;;;;;;516:10;482:86;;;;;;549:8;482:86;;;458:9;:21;468:10;458:21;;;;;;;;;;;;;;;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;602:10;584:39;;;614:8;584:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;584:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:328;;:::o;66:706::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract CompanyRegistry {\n    struct Company {\n        address ethAddress;\n        string ipfsURI;\n    }\n\n    mapping(address => Company) public companies;\n\n    event CompanyRegistered(address indexed ethAddress, string ipfsURI);\n\n    function registerCompany( string memory _ipfsURI,bool isregistered) public {\n        require(!isregistered, \"Company already registered\");\n        \n        companies[msg.sender] = Company({\n            ethAddress: msg.sender,\n            ipfsURI: _ipfsURI\n        });\n\n        emit CompanyRegistered(msg.sender, _ipfsURI);\n    }\n\n    function getCompany(address _ethAddress) public view returns ( string memory) {\n        return (companies[_ethAddress].ipfsURI);\n    }\n}\n\n",
  "sourcePath": "/Users/bisnuadhikari1/Desktop/SUPPLYCHAIN/contracts/indentify.sol",
  "ast": {
    "absolutePath": "project:/contracts/indentify.sol",
    "exportedSymbols": {
      "CompanyRegistry": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "CompanyRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CompanyRegistry.Company",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "ethAddress",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "122:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "122:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "ipfsURI",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "150:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Company",
            "nodeType": "StructDefinition",
            "scope": 62,
            "src": "97:74:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "companies",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "177:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Company_$6_storage_$",
              "typeString": "mapping(address => struct CompanyRegistry.Company)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "185:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "177:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Company_$6_storage_$",
                "typeString": "mapping(address => struct CompanyRegistry.Company)"
              },
              "valueType": {
                "contractScope": null,
                "id": 8,
                "name": "Company",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 6,
                "src": "196:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Company_$6_storage_ptr",
                  "typeString": "struct CompanyRegistry.Company"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 16,
            "name": "CompanyRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": true,
                  "name": "ethAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "252:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "name": "ipfsURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "280:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "251:44:0"
            },
            "src": "228:68:0"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "377:253:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "395:13:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "isregistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "396:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d70616e7920616c72656164792072656769737465726564",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "410:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c7fcc6562daf0ee88324cdb061498d6954f0a7bfb82222e9b5b921770e5585f",
                          "typeString": "literal_string \"Company already registered\""
                        },
                        "value": "Company already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c7fcc6562daf0ee88324cdb061498d6954f0a7bfb82222e9b5b921770e5585f",
                          "typeString": "literal_string \"Company already registered\""
                        }
                      ],
                      "id": 23,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        80,
                        81
                      ],
                      "referencedDeclaration": 81,
                      "src": "387:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "387:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "458:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Company_$6_storage_$",
                          "typeString": "mapping(address => struct CompanyRegistry.Company storage ref)"
                        }
                      },
                      "id": 32,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "468:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "468:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "458:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Company_$6_storage",
                        "typeString": "struct CompanyRegistry.Company storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "516:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "516:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "_ipfsURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "549:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "Company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "482:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Company_$6_storage_ptr_$",
                          "typeString": "type(struct CompanyRegistry.Company storage pointer)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "ethAddress",
                        "ipfsURI"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "482:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Company_$6_memory",
                        "typeString": "struct CompanyRegistry.Company memory"
                      }
                    },
                    "src": "458:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Company_$6_storage",
                      "typeString": "struct CompanyRegistry.Company storage ref"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "458:110:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "602:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "602:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "_ipfsURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "614:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 40,
                      "name": "CompanyRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "584:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "EmitStatement",
                  "src": "579:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_ipfsURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "328:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "name": "isregistered",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "351:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "326:43:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:0"
            },
            "scope": 62,
            "src": "302:328:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "714:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "companies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "732:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Company_$6_storage_$",
                              "typeString": "mapping(address => struct CompanyRegistry.Company storage ref)"
                            }
                          },
                          "id": 56,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "_ethAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "742:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "732:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Company_$6_storage",
                            "typeString": "struct CompanyRegistry.Company storage ref"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ipfsURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "732:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 58,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "731:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 53,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "724:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_ethAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "656:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:21:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "699:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "697:16:0"
            },
            "scope": 62,
            "src": "636:134:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 63,
        "src": "66:706:0"
      }
    ],
    "src": "32:742:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/indentify.sol",
      "exportedSymbols": {
        "CompanyRegistry": [
          62
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            62
          ],
          "name": "CompanyRegistry",
          "scope": 63
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "CompanyRegistry.Company",
              "name": "Company",
              "scope": 62,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "ethAddress",
                  "scope": 6,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "122:7:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "122:18:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ipfsURI",
                  "scope": 6,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "150:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "150:14:0"
              }
            ],
            "id": 6,
            "name": "StructDefinition",
            "src": "97:74:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "companies",
              "scope": 62,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct CompanyRegistry.Company)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct CompanyRegistry.Company)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "185:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Company",
                      "referencedDeclaration": 6,
                      "type": "struct CompanyRegistry.Company"
                    },
                    "id": 8,
                    "name": "UserDefinedTypeName",
                    "src": "196:7:0"
                  }
                ],
                "id": 9,
                "name": "Mapping",
                "src": "177:27:0"
              }
            ],
            "id": 10,
            "name": "VariableDeclaration",
            "src": "177:44:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "CompanyRegistered"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "ethAddress",
                      "scope": 16,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11,
                        "name": "ElementaryTypeName",
                        "src": "252:7:0"
                      }
                    ],
                    "id": 12,
                    "name": "VariableDeclaration",
                    "src": "252:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "ipfsURI",
                      "scope": 16,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 13,
                        "name": "ElementaryTypeName",
                        "src": "280:6:0"
                      }
                    ],
                    "id": 14,
                    "name": "VariableDeclaration",
                    "src": "280:14:0"
                  }
                ],
                "id": 15,
                "name": "ParameterList",
                "src": "251:44:0"
              }
            ],
            "id": 16,
            "name": "EventDefinition",
            "src": "228:68:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerCompany",
              "scope": 62,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_ipfsURI",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 17,
                        "name": "ElementaryTypeName",
                        "src": "328:6:0"
                      }
                    ],
                    "id": 18,
                    "name": "VariableDeclaration",
                    "src": "328:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "isregistered",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 19,
                        "name": "ElementaryTypeName",
                        "src": "351:4:0"
                      }
                    ],
                    "id": 20,
                    "name": "VariableDeclaration",
                    "src": "351:17:0"
                  }
                ],
                "id": 21,
                "name": "ParameterList",
                "src": "326:43:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 22,
                "name": "ParameterList",
                "src": "377:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7c7fcc6562daf0ee88324cdb061498d6954f0a7bfb82222e9b5b921770e5585f",
                                  "typeString": "literal_string \"Company already registered\""
                                }
                              ],
                              "overloadedDeclarations": [
                                80,
                                81
                              ],
                              "referencedDeclaration": 81,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 23,
                            "name": "Identifier",
                            "src": "387:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "bool",
                                  "value": "isregistered"
                                },
                                "id": 24,
                                "name": "Identifier",
                                "src": "396:12:0"
                              }
                            ],
                            "id": 25,
                            "name": "UnaryOperation",
                            "src": "395:13:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "436f6d70616e7920616c72656164792072656769737465726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Company already registered\"",
                              "value": "Company already registered"
                            },
                            "id": 26,
                            "name": "Literal",
                            "src": "410:28:0"
                          }
                        ],
                        "id": 27,
                        "name": "FunctionCall",
                        "src": "387:52:0"
                      }
                    ],
                    "id": 28,
                    "name": "ExpressionStatement",
                    "src": "387:52:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct CompanyRegistry.Company storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct CompanyRegistry.Company storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "mapping(address => struct CompanyRegistry.Company storage ref)",
                                  "value": "companies"
                                },
                                "id": 29,
                                "name": "Identifier",
                                "src": "458:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 77,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 30,
                                    "name": "Identifier",
                                    "src": "468:3:0"
                                  }
                                ],
                                "id": 31,
                                "name": "MemberAccess",
                                "src": "468:10:0"
                              }
                            ],
                            "id": 32,
                            "name": "IndexAccess",
                            "src": "458:21:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "ethAddress",
                                "ipfsURI"
                              ],
                              "type": "struct CompanyRegistry.Company memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6,
                                  "type": "type(struct CompanyRegistry.Company storage pointer)",
                                  "value": "Company"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "482:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 77,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 34,
                                    "name": "Identifier",
                                    "src": "516:3:0"
                                  }
                                ],
                                "id": 35,
                                "name": "MemberAccess",
                                "src": "516:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 18,
                                  "type": "string memory",
                                  "value": "_ipfsURI"
                                },
                                "id": 36,
                                "name": "Identifier",
                                "src": "549:8:0"
                              }
                            ],
                            "id": 37,
                            "name": "FunctionCall",
                            "src": "482:86:0"
                          }
                        ],
                        "id": 38,
                        "name": "Assignment",
                        "src": "458:110:0"
                      }
                    ],
                    "id": 39,
                    "name": "ExpressionStatement",
                    "src": "458:110:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 16,
                              "type": "function (address,string memory)",
                              "value": "CompanyRegistered"
                            },
                            "id": 40,
                            "name": "Identifier",
                            "src": "584:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 77,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 41,
                                "name": "Identifier",
                                "src": "602:3:0"
                              }
                            ],
                            "id": 42,
                            "name": "MemberAccess",
                            "src": "602:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "string memory",
                              "value": "_ipfsURI"
                            },
                            "id": 43,
                            "name": "Identifier",
                            "src": "614:8:0"
                          }
                        ],
                        "id": 44,
                        "name": "FunctionCall",
                        "src": "584:39:0"
                      }
                    ],
                    "id": 45,
                    "name": "EmitStatement",
                    "src": "579:44:0"
                  }
                ],
                "id": 46,
                "name": "Block",
                "src": "377:253:0"
              }
            ],
            "id": 47,
            "name": "FunctionDefinition",
            "src": "302:328:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getCompany",
              "scope": 62,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_ethAddress",
                      "scope": 61,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 48,
                        "name": "ElementaryTypeName",
                        "src": "656:7:0"
                      }
                    ],
                    "id": 49,
                    "name": "VariableDeclaration",
                    "src": "656:19:0"
                  }
                ],
                "id": 50,
                "name": "ParameterList",
                "src": "655:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 61,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 51,
                        "name": "ElementaryTypeName",
                        "src": "699:6:0"
                      }
                    ],
                    "id": 52,
                    "name": "VariableDeclaration",
                    "src": "699:13:0"
                  }
                ],
                "id": 53,
                "name": "ParameterList",
                "src": "697:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 53
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ipfsURI",
                              "referencedDeclaration": 5,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CompanyRegistry.Company storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10,
                                      "type": "mapping(address => struct CompanyRegistry.Company storage ref)",
                                      "value": "companies"
                                    },
                                    "id": 54,
                                    "name": "Identifier",
                                    "src": "732:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 49,
                                      "type": "address",
                                      "value": "_ethAddress"
                                    },
                                    "id": 55,
                                    "name": "Identifier",
                                    "src": "742:11:0"
                                  }
                                ],
                                "id": 56,
                                "name": "IndexAccess",
                                "src": "732:22:0"
                              }
                            ],
                            "id": 57,
                            "name": "MemberAccess",
                            "src": "732:30:0"
                          }
                        ],
                        "id": 58,
                        "name": "TupleExpression",
                        "src": "731:32:0"
                      }
                    ],
                    "id": 59,
                    "name": "Return",
                    "src": "724:39:0"
                  }
                ],
                "id": 60,
                "name": "Block",
                "src": "714:56:0"
              }
            ],
            "id": 61,
            "name": "FunctionDefinition",
            "src": "636:134:0"
          }
        ],
        "id": 62,
        "name": "ContractDefinition",
        "src": "66:706:0"
      }
    ],
    "id": 63,
    "name": "SourceUnit",
    "src": "32:742:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-07-04T17:16:26.946Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}